(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{454:function(a,t,s){"use strict";s.r(t);var n=s(33),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"threadlocal解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal解析"}},[a._v("#")]),a._v(" ThreadLocal解析")]),a._v(" "),s("h1",{attrs:{id:"threadlocal-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal-是什么"}},[a._v("#")]),a._v(" "),s("code",[a._v("ThreadLocal")]),a._v(" 是什么")]),a._v(" "),s("p",[s("code",[a._v("ThreadLocal")]),a._v(" 是 JDK "),s("code",[a._v("java.lang")]),a._v(" 包中的一个用来实现实现线程之间数据隔离的工具。")]),a._v(" "),s("blockquote",[s("p",[a._v("ThreadLocal 这个类提供线程局部变量，这些变量与其他正常的变量的不同之处在于，每一个访问该变量的线程在其内部都有一个独立的初始化的变量副本；ThreadLocal 实例变量通常采用private static 在类中修饰。\n只要 ThreadLocal 的变量能被访问，并且线程存活，那每个线程都会持有 ThreadLocal 变量的副本。当一个线程结束时，它所持有的所有 ThreadLocal 相对的实例副本都可被回收。")])]),a._v(" "),s("p",[a._v("当使用 "),s("code",[a._v("ThreadLocal")]),a._v(" 维护变量时，"),s("code",[a._v("ThreadLocal")]),a._v(" 为每个使用该变量的线程提供"),s("strong",[a._v("独立的变量副本")]),a._v("，所以每一个线程都可以独立地改变自己的副本，而"),s("strong",[a._v("不会影响")]),a._v("其它线程所对应的副本。")]),a._v(" "),s("h1",{attrs:{id:"threadlocal-使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal-使用"}},[a._v("#")]),a._v(" "),s("code",[a._v("ThreadLocal")]),a._v(" 使用")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("concurrent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CountDownLatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyThreadLocalStringDemo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" threadLocal "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" threadLocal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        threadLocal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" threads "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyThreadLocalStringDemo")]),a._v(" demo "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyThreadLocalStringDemo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CountDownLatch")]),a._v(" countDownLatch "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CountDownLatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("threads"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" threads"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),a._v(" thread "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                countDownLatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("countDown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"thread - "')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("这样子，当在一个线程中使用 "),s("code",[a._v("ThreadLocal")]),a._v(" 变量时，线程都会创建一份该变量的副本供该线程使用。")]),a._v(" "),s("h1",{attrs:{id:"使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[a._v("#")]),a._v(" 使用场景")]),a._v(" "),s("p",[a._v("要注意的是，"),s("code",[a._v("ThreadLocal")]),a._v(" 并不是为了解决共享变量的共享数据的线程安全的。")]),a._v(" "),s("p",[a._v("相反的，"),s("code",[a._v("ThreadLocal")]),a._v(" 是为了共享变量的数据隔离的方案。")]),a._v(" "),s("p",[a._v("在一些场景中，虽然多线程使用共享变量，但对这个共享变量之间的操作在逻辑上是没有依赖关系的，但是实际操作上不同线程之间对共享变量的操作让其他线程受到了影响。这时候就需要使用 "),s("code",[a._v("ThreadLocal")]),a._v(" 提供数据隔离了。")]),a._v(" "),s("p",[a._v("当很多线程需要多次使用同一个对象，\n并且需要该对象具有相同初始化值的时候最适合使用 "),s("code",[a._v("ThreadLocal")]),a._v(" 。\n最常见的 "),s("code",[a._v("ThreadLocal")]),a._v(" 使用场景为用来解决 "),s("strong",[a._v("数据库连接")]),a._v("、"),s("strong",[a._v("Session管理")]),a._v("等。")]),a._v(" "),s("h1",{attrs:{id:"threadlocal-为什么会内存泄漏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal-为什么会内存泄漏"}},[a._v("#")]),a._v(" "),s("code",[a._v("ThreadLocal")]),a._v(" 为什么会内存泄漏")]),a._v(" "),s("h2",{attrs:{id:"原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[a._v("#")]),a._v(" 原理")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/stormbuf/blog/main/img/resources9456652004320593558.png",alt:""}})]),a._v(" "),s("p",[s("strong",[a._v("这个 Map 是个抽象的 Map 并不是 java.util 中的 Map")]),a._v(" "),s("strong",[a._v("ThreadLocalMap(即上图的Map)的生命周期跟Thread一样长")])]),a._v(" "),s("blockquote",[s("p",[a._v("ThreadLocal\nThreadLocal的实现是这样的：每个Thread 维护一个 ThreadLocalMap 映射表，这个映射表的 key 是 ThreadLocal实例本身，value 是真正需要存储的 Object。\n也就是说 ThreadLocal 本身并不存储值，它只是作为一个 key 来让线程从 ThreadLocalMap 获取 value。值得注意的是图中的虚线，表示 ThreadLocalMap 是使用 ThreadLocal 的弱引用作为 Key 的，弱引用的对象在 GC 时会被回收。")])]),a._v(" "),s("h2",{attrs:{id:"threadlocal-为什么会内存泄漏-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal-为什么会内存泄漏-2"}},[a._v("#")]),a._v(" "),s("code",[a._v("ThreadLocal")]),a._v(" 为什么会内存泄漏")]),a._v(" "),s("p",[s("code",[a._v("ThreadLocalMap")]),a._v(" 使用 "),s("code",[a._v("ThreadLocal")]),a._v(" 的弱引用作为 "),s("code",[a._v("key")]),a._v(" ，")]),a._v(" "),s("p",[a._v("如果一个 "),s("code",[a._v("ThreadLocal")]),a._v(" 没有外部强引用来引用它，")]),a._v(" "),s("p",[a._v("那么系统 "),s("code",[a._v("GC")]),a._v(" 的时候，这个 "),s("code",[a._v("ThreadLocal")]),a._v(" 势必会被回收，")]),a._v(" "),s("p",[a._v("这样一来， "),s("code",[a._v("ThreadLocalMap")]),a._v(" 中就会出现 "),s("strong",[a._v("key")]),a._v(" 为 "),s("strong",[a._v("null")]),a._v(" 的 "),s("strong",[a._v("Entry")]),a._v(" ，")]),a._v(" "),s("p",[a._v("就没有办法访问这些 "),s("strong",[a._v("key")]),a._v(" 为 "),s("strong",[a._v("null")]),a._v(" 的 "),s("strong",[a._v("Entry")]),a._v(" 的 "),s("strong",[a._v("value")]),a._v(" ，")]),a._v(" "),s("p",[a._v("如果当前线程再迟迟不结束的话，")]),a._v(" "),s("p",[a._v("这些 "),s("strong",[a._v("key")]),a._v(" 为 "),s("strong",[a._v("null")]),a._v(" 的 "),s("strong",[a._v("Entry")]),a._v("的 "),s("strong",[a._v("value")]),a._v(" 就会一直存在一条强引用链：")]),a._v(" "),s("p",[s("code",[a._v("Thread Ref -> Thread -> ThreaLocalMap -> Entry -> value")]),a._v(" 永远无法回收，")]),a._v(" "),s("p",[a._v("当线程迟迟无法结束，或者线程属于线程池，就可能造成内存泄漏。")]),a._v(" "),s("p",[a._v("其实，"),s("code",[a._v("ThreadLocalMap")]),a._v(" 的设计中已经考虑到这种情况，也加上了一些防护措施：在"),s("code",[a._v("ThreadLocal")]),a._v(" 的 "),s("code",[a._v("get()")]),a._v(","),s("code",[a._v("set()")]),a._v(","),s("code",[a._v("remove()")]),a._v(" 的时候都会清除线程 "),s("code",[a._v("ThreadLocalMap")]),a._v(" 里所有 "),s("strong",[a._v("key")]),a._v(" 为 "),s("strong",[a._v("null")]),a._v(" 的 "),s("strong",[a._v("value")]),a._v(" 。")]),a._v(" "),s("p",[a._v("但是这些被动的预防措施并不能保证下列情况不会内存泄漏：")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("使用 "),s("code",[a._v("static")]),a._v(" 的 "),s("code",[a._v("ThreadLocal")]),a._v("，延长了 "),s("code",[a._v("ThreadLocal")]),a._v(" 的生命周期，可能导致的内存泄漏。")])]),a._v(" "),s("li",[s("p",[a._v("分配使用了 "),s("code",[a._v("ThreadLocal")]),a._v(" 又不再调用 "),s("code",[a._v("get()")]),a._v(" , "),s("code",[a._v("set()")]),a._v(" , "),s("code",[a._v("remove()")]),a._v(" 方法，那么就会导致内存泄漏。")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);