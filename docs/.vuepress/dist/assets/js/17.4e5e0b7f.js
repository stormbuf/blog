(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{457:function(t,s,a){"use strict";a.r(s);var n=a(33),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"源码解析-spring-boot-创建内嵌tomcat容器并启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源码解析-spring-boot-创建内嵌tomcat容器并启动"}},[t._v("#")]),t._v(" 源码解析：spring boot 创建内嵌Tomcat容器并启动")]),t._v(" "),a("blockquote",[a("p",[t._v("基于版本spring boot 2.1.5.RELEASE")])]),t._v(" "),a("p",[t._v("spring boot 启动时会调用"),a("code",[t._v("SpringApplication#run(String... args)")]),t._v("方法，一切都从这里开始。")]),t._v(" "),a("h1",{attrs:{id:"整体流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整体流程"}},[t._v("#")]),t._v(" 整体流程")]),t._v(" "),a("h2",{attrs:{id:"_1-applicationcontext创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-applicationcontext创建"}},[t._v("#")]),t._v(" 1. ApplicationContext创建")]),t._v(" "),a("p",[t._v("spring boot会调用"),a("code",[t._v("org.springframework.boot.SpringApplication#createApplicationContext")]),t._v("方法，根据"),a("code",[t._v("webApplicationType")]),t._v("值创建"),a("code",[t._v("ApplicationContext")]),t._v("。")]),t._v(" "),a("p",[t._v("一般web环境都是创建"),a("code",[t._v("AnnotationConfigServletWebServerApplicationContext")]),t._v("，也只有当前应用为网络应用时才会启动内嵌的 Servlet 容器。（Servlet 容器创建及启动的实现在"),a("code",[t._v("ServletWebServerApplicationContext")]),t._v("中，而"),a("code",[t._v("AnnotationConfigServletWebServerApplicationContext")]),t._v("继承了该类）。")]),t._v(" "),a("h2",{attrs:{id:"_2-创建servlet-容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建servlet-容器"}},[t._v("#")]),t._v(" 2. 创建Servlet 容器")]),t._v(" "),a("p",[a("code",[t._v("run")]),t._v("方法中，spring boot会通过"),a("code",[t._v("refreshContext()")]),t._v("方法调用"),a("code",[t._v("ApplicationContext")]),t._v("的"),a("code",[t._v("refresh()")]),t._v("方法（该方法由"),a("code",[t._v("ApplicationContext")]),t._v("实例的父类"),a("code",[t._v("AbstractApplicationContext")]),t._v("提供实现，是模板方法的应用，里面定义了"),a("code",[t._v("ApplicationContext")]),t._v("的启动流程）。")]),t._v(" "),a("h3",{attrs:{id:"refresh-方法定义的流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#refresh-方法定义的流程"}},[t._v("#")]),t._v(" refresh()方法定义的流程")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("refresh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startupShutdownMonitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prepare this context for refreshing.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareRefresh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Tell the subclass to refresh the internal bean factory.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigurableListableBeanFactory")]),t._v(" beanFactory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("obtainFreshBeanFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prepare the bean factory for use in this context.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareBeanFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Allows post-processing of the bean factory in context subclasses.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postProcessBeanFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Invoke factory processors registered as beans in the context.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeBeanFactoryPostProcessors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Register bean processors that intercept bean creation.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerBeanPostProcessors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize message source for this context.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initMessageSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize event multicaster for this context.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initApplicationEventMulticaster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize other special beans in specific context subclasses.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onRefresh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Check for listener beans and register them.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerListeners")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Instantiate all remaining (non-lazy-init) singletons.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishBeanFactoryInitialization")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Last step: publish corresponding event.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishRefresh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \n")])])]),a("p",[t._v("子类"),a("code",[t._v("ServletWebServerApplicationContext")]),t._v(" 重写的"),a("code",[t._v("onRefresh()")]),t._v("方法被调用。")]),t._v(" "),a("p",[t._v("这个方法里通过"),a("code",[t._v("createWebServer()")]),t._v("创建了 "),a("code",[t._v("Servlet")]),t._v("容器（默认为 Tomcat），并添加 IoC 容器中的 "),a("code",[t._v("Servlet")]),t._v("、"),a("code",[t._v("Filter")]),t._v("和 "),a("code",[t._v("EventListener")]),t._v("至 "),a("code",[t._v("Servlet")]),t._v("上下文。")]),t._v(" "),a("h2",{attrs:{id:"_3-启动容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-启动容器"}},[t._v("#")]),t._v(" 3. 启动容器")]),t._v(" "),a("p",[t._v("子类"),a("code",[t._v("ServletWebServerApplicationContext")]),t._v(" 重写的"),a("code",[t._v("finishRefresh()")]),t._v("方法被调用。")]),t._v(" "),a("p",[t._v("这个方法里通过"),a("code",[t._v("startWebServer()")]),t._v("调用"),a("code",[t._v("WebServer#start")]),t._v("方法启动创建的容器。")]),t._v(" "),a("h1",{attrs:{id:"createwebserver-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#createwebserver-方法"}},[t._v("#")]),t._v(" createWebServer 方法")]),t._v(" "),a("p",[a("code",[t._v("org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext#createWebServer")])]),t._v(" "),a("p",[t._v("以tomcat容器为例：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWebServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebServer")]),t._v(" webServer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("webServer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取被加载都ioc容器中的TomcatServletWebServerFactory")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletContext")]),t._v(" servletContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getServletContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("webServer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" servletContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletWebServerFactory")]),t._v(" factory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getWebServerFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成一个TomcatWebServer实例")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("webServer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getWebServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSelfInitializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("servletContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSelfInitializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onStartup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("servletContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletException")]),t._v(" ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContextException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Cannot initialize servlet context"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initPropertySources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("spring boot在"),a("code",[t._v("org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory#getWebServer")])]),t._v(" "),a("p",[t._v("给tomcat设置了相关的配置。")]),t._v(" "),a("p",[t._v("其中"),a("code",[t._v("org.apache.catalina.connector")]),t._v("的实例化给Tomcat引入了默认配置。")]),t._v(" "),a("p",[t._v("源码路径：")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory#getWebServer")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Connector connector = new Connector(this.protocol);")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Class<?> clazz = Class.forName(protocolHandlerClassName);")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("org.apache.coyote.http11.Http11NioProtocol")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("org.apache.coyote.AbstractProtocol")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("org.apache.coyote.AbstractProtocol#endpoint")]),t._v("默认配置保存在这个类中。")])])]),t._v(" "),a("p",[a("strong",[t._v("maxThreads")]),t._v(": 用于接收和处理client端请求的最大线程数，默认200")]),t._v(" "),a("p",[a("strong",[t._v("acceptCount")]),t._v(": tomcat 线程池所有线程忙碌时，等待队列的最长长度。默认100")]),t._v(" "),a("p",[a("strong",[t._v("connectionTimeout")]),t._v("：每个http请求的读取超时时间。默认2000ms")])])}),[],!1,null,null,null);s.default=e.exports}}]);